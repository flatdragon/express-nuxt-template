name: Main Workflow

on:
  push:
    branches: 
      - main

env:
  ENV: pipeline
  WORKDIR: ${PWD##*/}
  # FRONTEND_NODE_MODULES_PATH: /app/node_modules.dummy
  # FRONTEND_NUXT_PATH: /app/.nuxt.dummy
  # WEBHOOK_NODE_MODULES_PATH: /app/node_modules.dummy

jobs:

  integration:
    name: Frontend Integration
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Main Branch
        uses: actions/checkout@v2

      - name: Build Frontend Container
        run: docker-compose build frontend

      - name: Cache Frontend Dependencies
        uses: actions/cache@v2
        with:
          path: ./frontend/.npm
          key: frontend-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            frontend-node-modules-

      - name: Up Frontend Container
        run: docker-compose up --detach frontend

      - name: Install Frontend Dependencies
        # run: docker-compose run frontend npm ci --prefer-offline && exit 0
        run: docker exec ${WORKDIR}_frontend_1 sh -c 'npm ci --prefer-offline; exit $?'

      - name: Lint Frontend
        # run: docker-compose run frontend npm run lint --if-preset && exit 0
        run: docker exec ${WORKDIR}_frontend_1 sh -c 'npm run lint --if-preset; exit $?'

      - name: Test Frontend
        # run: docker-compose run frontend npm run test --if-present && exit 0
        run: docker exec ${WORKDIR}_frontend_1 sh -c 'npm run test --if-present; exit $?'

      - name: Build Frontend
        # run: docker-compose run frontend npm run build && exit 0
        run: docker exec ${WORKDIR}_frontend_1 sh -c 'npm run build; exit $?'

  # deploy:
  #   name: Deploy Project
  #   needs: integration
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Trigger Deploy Webhook
  #       uses: distributhor/workflow-webhook@v1
  #       env:
  #         webhook_url: ${{ secrets.WEBHOOK_URL }}
  #         webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
