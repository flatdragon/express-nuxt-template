version: "3.9"

services:

  proxy:
    image: traefik
    command:
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    profiles:
      - production
      - development

  frontend:
    build:
      context: ./docker/services/frontend
    environment:
      ENV: ${ENV}
      HOST: ${FRONTEND_HOST:-0.0.0.0}
      PORT: ${FRONTEND_PORT:-3000}
      CHOKIDAR_USEPOLLING: 1
    ports:
      - ${FRONTEND_PORT:-3000}
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`${FRONTEND_VIRTUAL_HOST:-localhost}`)
      - traefik.http.routers.frontend.entrypoints=http
    deploy:
      replicas: ${FRONTEND_REPLICAS:-1}
    volumes:
      - ./frontend:/app
      - ${FRONTEND_NODE_MODULES_PATH:/app/node_modules}
      - ${FRONTEND_NUXT_PATH:/app/.nuxt}
      - ./docker/scripts:/scripts
    profiles:
      - production
      - development

  webhook:
    build:
      context: ./docker/services/webhook
    environment:
      ENV: ${ENV}
      HOST: ${WEBHOOK_HOST:-0.0.0.0}
      PORT: ${WEBHOOK_PORT:-4000}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}
    ports:
      - ${WEBHOOK_PORT:-4000}
    labels:
      - traefik.enable=true
      - traefik.http.routers.webhook.rule=Host(`${WEBHOOK_VIRTUAL_HOST:webhook.localhost}`)
      - traefik.http.routers.webhook.entrypoints=http
    volumes:
      - ./webhook:/app
      - ${WEBHOOK_NODE_MODULES_PATH:/app/node_modules}
      - ./docker/scripts:/scripts
    profiles:
      - production
      - development

  frontend-tunnel:
    build:
      context: ./docker/services/tunnel
    command: lt --subdomain ${FRONTEND_TUNNEL_SUBDOMAIN} --local-host frontend --port ${FRONTEND_PORT:-3000}
    profiles: []

  webhook-tunnel:
    build:
      context: ./docker/services/tunnel
    command: lt --subdomain ${WEBHOOK_TUNNEL_SUBDOMAIN} --local-host webhook --port ${WEBHOOK_PORT:-4000}
    profiles: []
